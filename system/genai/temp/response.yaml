"models":
- "classname": |-
    Car
  "code": |-
    class Car(Base):
        __tablename__ = 'car'

        id = Column(Integer, primary_key=True, autoincrement=True)
        model = Column(String)
        brand_id = Column(Integer, ForeignKey('brand.id'))
        price = Column(Integer)
        year_of_manufacture = Column(Integer)
        test_drive_count = Column(Integer)
  "description": |-
    Represents a car in the dealership, including the brand it belongs to and its price. Tracks the number of test drives requested for this car.
  "name": |-
    Car
- "classname": |-
    Brand
  "code": |-
    class Brand(Base):
        __tablename__ = 'brand'

        id = Column(Integer, primary_key=True, autoincrement=True)
        name = Column(String)
  "description": |-
    Represents a car brand with a unique identifier.
  "name": |-
    Brand
- "classname": |-
    Customer
  "code": |-
    class Customer(Base):
        __tablename__ = 'customer'

        id = Column(Integer, primary_key=True, autoincrement=True)
        first_name = Column(String)
        last_name = Column(String)
        email = Column(String)
        test_drive_count = Column(Integer)
  "description": |-
    Represents a customer with contact details. Tracks the number of test drives requested by the customer.
  "name": |-
    Customer
- "classname": |-
    Sale
  "code": |-
    class Sale(Base):
        __tablename__ = 'sale'

        id = Column(Integer, primary_key=True, autoincrement=True)
        car_id = Column(Integer, ForeignKey('car.id'))
        customer_id = Column(Integer, ForeignKey('customer.id'))
        sale_date = Column(DateTime)
        sale_price = Column(Integer)
  "description": |-
    Details the sale transactions involving cars and customers.
  "name": |-
    Sale
- "classname": |-
    Dealer
  "code": |-
    class Dealer(Base):
        __tablename__ = 'dealer'

        id = Column(Integer, primary_key=True, autoincrement=True)
        name = Column(String)
        location = Column(String)
        inventory_count = Column(Integer)
  "description": |-
    Represents a dealership location along with its name. Tracks the total inventory count for the dealer.
  "name": |-
    Dealer
- "classname": |-
    Inventory
  "code": |-
    class Inventory(Base):
        __tablename__ = 'inventory'

        id = Column(Integer, primary_key=True, autoincrement=True)
        dealer_id = Column(Integer, ForeignKey('dealer.id'))
        car_id = Column(Integer, ForeignKey('car.id'))
        quantity = Column(Integer)
  "description": |-
    Tracks the number of a specific car model available at each dealer.
  "name": |-
    Inventory
- "classname": |-
    Employee
  "code": |-
    class Employee(Base):
        __tablename__ = 'employee'

        id = Column(Integer, primary_key=True, autoincrement=True)
        dealer_id = Column(Integer, ForeignKey('dealer.id'))
        first_name = Column(String)
        last_name = Column(String)
        position = Column(String)
        service_count = Column(Integer)
  "description": |-
    Contains the details of employees working at various dealerships. Tracks the number of services conducted by an employee.
  "name": |-
    Employee
- "classname": |-
    TestDrive
  "code": |-
    class TestDrive(Base):
        __tablename__ = 'test_drive'

        id = Column(Integer, primary_key=True, autoincrement=True)
        customer_id = Column(Integer, ForeignKey('customer.id'))
        car_id = Column(Integer, ForeignKey('car.id'))
        date = Column(DateTime)
  "description": |-
    Records customer requests and actual test drive events with dates.
  "name": |-
    TestDrive
- "classname": |-
    Promotion
  "code": |-
    class Promotion(Base):
        __tablename__ = 'promotion'

        id = Column(Integer, primary_key=True, autoincrement=True)
        car_id = Column(Integer, ForeignKey('car.id'))
        description = Column(String)
        discount_percentage = Column(Integer)
        applied_count = Column(Integer)
  "description": |-
    Lists active promotions on specific cars, including discounts. Tracks how many sales have utilized the promotion.
  "name": |-
    Promotion
- "classname": |-
    Maintenance
  "code": |-
    class Maintenance(Base):
        __tablename__ = 'maintenance'

        id = Column(Integer, primary_key=True, autoincrement=True)
        car_id = Column(Integer, ForeignKey('car.id'))
        employee_id = Column(Integer, ForeignKey('employee.id'))
        last_serviced_date = Column(DateTime)
        service_details = Column(String)
  "description": |-
    Stores information about maintenance and service history of cars. Associates maintenance tasks with employees.
  "name": |-
    Maintenance
- "classname": |-
    CarFeature
  "code": |-
    class CarFeature(Base):
        __tablename__ = 'car_feature'

        id = Column(Integer, primary_key=True, autoincrement=True)
        feature_name = Column(String)
  "description": |-
    Defines the features that can be associated with different cars.
  "name": |-
    CarFeature
- "classname": |-
    CarFeatureAssignment
  "code": |-
    class CarFeatureAssignment(Base):
        __tablename__ = 'car_feature_assignment'

        id = Column(Integer, primary_key=True, autoincrement=True)
        car_id = Column(Integer, ForeignKey('car.id'))
        feature_id = Column(Integer, ForeignKey('car_feature.id'))
  "description": |-
    Link table between cars and features to assign features to specific cars.
  "name": |-
    CarFeatureAssignment
"name": |-
  Car Dealership System
"rules":
- "code": |-
    Rule.count(derive=Car.test_drive_count, as_count_of=TestDrive, where=lambda row: row.car_id == Car.id)
  "description": |-
    Count total cars that have been requested for a test drive
  "entity": |-
    Car
  "name": |-
    Count Car Test Drives
  "use_case": |-
    General
- "code": |-
    Rule.count(derive=Customer.test_drive_count, as_count_of=TestDrive, where=lambda row: row.customer_id == Customer.id)
  "description": |-
    Count how many test drives a customer has requested
  "entity": |-
    Customer
  "name": |-
    Count Customer Test Drives
  "use_case": |-
    General
- "code": |-
    Rule.count(derive=Employee.service_count, as_count_of=Maintenance, where=lambda row: row.employee_id == Employee.id)
  "description": |-
    Count the number of services conducted by an employee
  "entity": |-
    Employee
  "name": |-
    Count Employee Services
  "use_case": |-
    General
- "code": |-
    Rule.count(derive=Promotion.applied_count, as_count_of=Sale, where=lambda row: row.car_id == Promotion.car_id)
  "description": |-
    Count how many promotions have been applied to a car
  "entity": |-
    Promotion
  "name": |-
    Count Promotion Applications
  "use_case": |-
    General
- "code": |-
    Rule.constraint(validate=Dealer, as_condition=lambda row: row.inventory_count <= 50, error_msg='Dealer inventory exceeds limit')
  "description": |-
    Ensure no dealer has more than a fixed limit of cars in inventory
  "entity": |-
    Dealer
  "name": |-
    Dealer Inventory Constraint
  "use_case": |-
    General
- "code": |-
    Rule.constraint(validate=Employee, as_condition=lambda row: row.service_count <= 10, error_msg='Employee has exceeded the daily service limit')
  "description": |-
    Ensure employees cannot service more than 10 cars in a day
  "entity": |-
    Employee
  "name": |-
    Employee Service Constraint
  "use_case": |-
    General
"test_data": |-
  # Test Data for Car Model
  car1 = Car(id=1, model="Model S", brand_id=1, price=80000, year_of_manufacture=2021, test_drive_count=1)
  car2 = Car(id=2, model="Model 3", brand_id=1, price=40000, year_of_manufacture=2020, test_drive_count=1)
  car3 = Car(id=3, model="Mustang", brand_id=2, price=55000, year_of_manufacture=2022, test_drive_count=1)
  car4 = Car(id=4, model="Civic", brand_id=3, price=25000, year_of_manufacture=2019, test_drive_count=1)

  # Test Data for Brand Model
  brand1 = Brand(id=1, name="Tesla")
  brand2 = Brand(id=2, name="Ford")
  brand3 = Brand(id=3, name="Honda")
  brand4 = Brand(id=4, name="Toyota")

  # Test Data for Customer Model
  customer1 = Customer(id=1, first_name="Alice", last_name="Smith", email="alice@example.com", test_drive_count=1)
  customer2 = Customer(id=2, first_name="Bob", last_name="Johnson", email="bob@example.com", test_drive_count=1)
  customer3 = Customer(id=3, first_name="Charlie", last_name="Brown", email="charlie@example.com", test_drive_count=1)
  customer4 = Customer(id=4, first_name="Diana", last_name="Evans", email="diana@example.com", test_drive_count=1)

  # Test Data for Sale Model
  sale1 = Sale(id=1, car_id=1, customer_id=1, sale_date=date(2022, 5, 20), sale_price=80000)
  sale2 = Sale(id=2, car_id=2, customer_id=2, sale_date=date(2022, 7, 15), sale_price=38000)
  sale3 = Sale(id=3, car_id=3, customer_id=3, sale_date=date(2022, 8, 30), sale_price=55000)
  sale4 = Sale(id=4, car_id=4, customer_id=4, sale_date=date(2022, 12, 5), sale_price=24000)

  # Test Data for Dealer Model
  dealer1 = Dealer(id=1, name="Auto World", location="New York", inventory_count=15)
  dealer2 = Dealer(id=2, name="Speed Motors", location="Los Angeles", inventory_count=20)
  dealer3 = Dealer(id=3, name="Fast Drive", location="Chicago", inventory_count=17)
  dealer4 = Dealer(id=4, name="Luxury Cars", location="Houston", inventory_count=19)

  # Test Data for Inventory Model
  inventory1 = Inventory(id=1, dealer_id=1, car_id=1, quantity=5)
  inventory2 = Inventory(id=2, dealer_id=2, car_id=2, quantity=10)
  inventory3 = Inventory(id=3, dealer_id=3, car_id=3, quantity=3)
  inventory4 = Inventory(id=4, dealer_id=4, car_id=4, quantity=7)

  # Test Data for Employee Model
  employee1 = Employee(id=1, dealer_id=1, first_name="Paul", last_name="Davis", position="Sales Manager", service_count=3)
  employee2 = Employee(id=2, dealer_id=2, first_name="Laura", last_name="Miller", position="Technician", service_count=2)
  employee3 = Employee(id=3, dealer_id=3, first_name="Kevin", last_name="Cook", position="Accountant", service_count=4)
  employee4 = Employee(id=4, dealer_id=4, first_name="Sarah", last_name="Johnson", position="Receptionist", service_count=1)

  # Test Data for Test Drive Model
  test_drive1 = TestDrive(id=1, customer_id=1, car_id=1, date=date(2022, 4, 10))
  test_drive2 = TestDrive(id=2, customer_id=2, car_id=2, date=date(2022, 6, 12))
  test_drive3 = TestDrive(id=3, customer_id=3, car_id=3, date=date(2022, 7, 18))
  test_drive4 = TestDrive(id=4, customer_id=4, car_id=4, date=date(2022, 9, 25))

  # Test Data for Promotion Model
  promotion1 = Promotion(id=1, car_id=1, description="Winter Sale", discount_percentage=10, applied_count=1)
  promotion2 = Promotion(id=2, car_id=2, description="Summer Clearance", discount_percentage=15, applied_count=1)
  promotion3 = Promotion(id=3, car_id=3, description="New Year Offer", discount_percentage=5, applied_count=1)
  promotion4 = Promotion(id=4, car_id=4, description="Anniversary Special", discount_percentage=20, applied_count=1)

  # Test Data for Maintenance Model
  maintenance1 = Maintenance(id=1, car_id=1, employee_id=1, last_serviced_date=date(2022, 3, 10), service_details="Oil Change")
  maintenance2 = Maintenance(id=2, car_id=2, employee_id=2, last_serviced_date=date(2022, 5, 5), service_details="Brake Check")
  maintenance3 = Maintenance(id=3, car_id=3, employee_id=3, last_serviced_date=date(2022, 6, 22), service_details="Tire Rotation")
  maintenance4 = Maintenance(id=4, car_id=4, employee_id=4, last_serviced_date=date(2022, 8, 14), service_details="Battery Replacement")

  # Test Data for Car Feature Model
  car_feature1 = CarFeature(id=1, feature_name="Sunroof")
  car_feature2 = CarFeature(id=2, feature_name="Leather Seats")
  car_feature3 = CarFeature(id=3, feature_name="Bluetooth")
  car_feature4 = CarFeature(id=4, feature_name="Backup Camera")

  # Test Data for Car Feature Assignment Model
  car_feature_assignment1 = CarFeatureAssignment(id=1, car_id=1, feature_id=1)
  car_feature_assignment2 = CarFeatureAssignment(id=2, car_id=2, feature_id=2)
  car_feature_assignment3 = CarFeatureAssignment(id=3, car_id=3, feature_id=3)
  car_feature_assignment4 = CarFeatureAssignment(id=4, car_id=4, feature_id=4)
"test_data_rows":
- "code": |-
    car1 = Car(id=1, model="Model S", brand_id=1, price=80000, year_of_manufacture=2021, test_drive_count=1)
  "test_data_row_variable": |-
    car1
- "code": |-
    car2 = Car(id=2, model="Model 3", brand_id=1, price=40000, year_of_manufacture=2020, test_drive_count=1)
  "test_data_row_variable": |-
    car2
- "code": |-
    car3 = Car(id=3, model="Mustang", brand_id=2, price=55000, year_of_manufacture=2022, test_drive_count=1)
  "test_data_row_variable": |-
    car3
- "code": |-
    car4 = Car(id=4, model="Civic", brand_id=3, price=25000, year_of_manufacture=2019, test_drive_count=1)
  "test_data_row_variable": |-
    car4
- "code": |-
    brand1 = Brand(id=1, name="Tesla")
  "test_data_row_variable": |-
    brand1
- "code": |-
    brand2 = Brand(id=2, name="Ford")
  "test_data_row_variable": |-
    brand2
- "code": |-
    brand3 = Brand(id=3, name="Honda")
  "test_data_row_variable": |-
    brand3
- "code": |-
    brand4 = Brand(id=4, name="Toyota")
  "test_data_row_variable": |-
    brand4
- "code": |-
    customer1 = Customer(id=1, first_name="Alice", last_name="Smith", email="alice@example.com", test_drive_count=1)
  "test_data_row_variable": |-
    customer1
- "code": |-
    customer2 = Customer(id=2, first_name="Bob", last_name="Johnson", email="bob@example.com", test_drive_count=1)
  "test_data_row_variable": |-
    customer2
- "code": |-
    customer3 = Customer(id=3, first_name="Charlie", last_name="Brown", email="charlie@example.com", test_drive_count=1)
  "test_data_row_variable": |-
    customer3
- "code": |-
    customer4 = Customer(id=4, first_name="Diana", last_name="Evans", email="diana@example.com", test_drive_count=1)
  "test_data_row_variable": |-
    customer4
- "code": |-
    sale1 = Sale(id=1, car_id=1, customer_id=1, sale_date=date(2022, 5, 20), sale_price=80000)
  "test_data_row_variable": |-
    sale1
- "code": |-
    sale2 = Sale(id=2, car_id=2, customer_id=2, sale_date=date(2022, 7, 15), sale_price=38000)
  "test_data_row_variable": |-
    sale2
- "code": |-
    sale3 = Sale(id=3, car_id=3, customer_id=3, sale_date=date(2022, 8, 30), sale_price=55000)
  "test_data_row_variable": |-
    sale3
- "code": |-
    sale4 = Sale(id=4, car_id=4, customer_id=4, sale_date=date(2022, 12, 5), sale_price=24000)
  "test_data_row_variable": |-
    sale4
- "code": |-
    dealer1 = Dealer(id=1, name="Auto World", location="New York", inventory_count=15)
  "test_data_row_variable": |-
    dealer1
- "code": |-
    dealer2 = Dealer(id=2, name="Speed Motors", location="Los Angeles", inventory_count=20)
  "test_data_row_variable": |-
    dealer2
- "code": |-
    dealer3 = Dealer(id=3, name="Fast Drive", location="Chicago", inventory_count=17)
  "test_data_row_variable": |-
    dealer3
- "code": |-
    dealer4 = Dealer(id=4, name="Luxury Cars", location="Houston", inventory_count=19)
  "test_data_row_variable": |-
    dealer4
- "code": |-
    inventory1 = Inventory(id=1, dealer_id=1, car_id=1, quantity=5)
  "test_data_row_variable": |-
    inventory1
- "code": |-
    inventory2 = Inventory(id=2, dealer_id=2, car_id=2, quantity=10)
  "test_data_row_variable": |-
    inventory2
- "code": |-
    inventory3 = Inventory(id=3, dealer_id=3, car_id=3, quantity=3)
  "test_data_row_variable": |-
    inventory3
- "code": |-
    inventory4 = Inventory(id=4, dealer_id=4, car_id=4, quantity=7)
  "test_data_row_variable": |-
    inventory4
- "code": |-
    employee1 = Employee(id=1, dealer_id=1, first_name="Paul", last_name="Davis", position="Sales Manager", service_count=3)
  "test_data_row_variable": |-
    employee1
- "code": |-
    employee2 = Employee(id=2, dealer_id=2, first_name="Laura", last_name="Miller", position="Technician", service_count=2)
  "test_data_row_variable": |-
    employee2
- "code": |-
    employee3 = Employee(id=3, dealer_id=3, first_name="Kevin", last_name="Cook", position="Accountant", service_count=4)
  "test_data_row_variable": |-
    employee3
- "code": |-
    employee4 = Employee(id=4, dealer_id=4, first_name="Sarah", last_name="Johnson", position="Receptionist", service_count=1)
  "test_data_row_variable": |-
    employee4
- "code": |-
    test_drive1 = TestDrive(id=1, customer_id=1, car_id=1, date=date(2022, 4, 10))
  "test_data_row_variable": |-
    test_drive1
- "code": |-
    test_drive2 = TestDrive(id=2, customer_id=2, car_id=2, date=date(2022, 6, 12))
  "test_data_row_variable": |-
    test_drive2
- "code": |-
    test_drive3 = TestDrive(id=3, customer_id=3, car_id=3, date=date(2022, 7, 18))
  "test_data_row_variable": |-
    test_drive3
- "code": |-
    test_drive4 = TestDrive(id=4, customer_id=4, car_id=4, date=date(2022, 9, 25))
  "test_data_row_variable": |-
    test_drive4
- "code": |-
    promotion1 = Promotion(id=1, car_id=1, description="Winter Sale", discount_percentage=10, applied_count=1)
  "test_data_row_variable": |-
    promotion1
- "code": |-
    promotion2 = Promotion(id=2, car_id=2, description="Summer Clearance", discount_percentage=15, applied_count=1)
  "test_data_row_variable": |-
    promotion2
- "code": |-
    promotion3 = Promotion(id=3, car_id=3, description="New Year Offer", discount_percentage=5, applied_count=1)
  "test_data_row_variable": |-
    promotion3
- "code": |-
    promotion4 = Promotion(id=4, car_id=4, description="Anniversary Special", discount_percentage=20, applied_count=1)
  "test_data_row_variable": |-
    promotion4
- "code": |-
    maintenance1 = Maintenance(id=1, car_id=1, employee_id=1, last_serviced_date=date(2022, 3, 10), service_details="Oil Change")
  "test_data_row_variable": |-
    maintenance1
- "code": |-
    maintenance2 = Maintenance(id=2, car_id=2, employee_id=2, last_serviced_date=date(2022, 5, 5), service_details="Brake Check")
  "test_data_row_variable": |-
    maintenance2
- "code": |-
    maintenance3 = Maintenance(id=3, car_id=3, employee_id=3, last_serviced_date=date(2022, 6, 22), service_details="Tire Rotation")
  "test_data_row_variable": |-
    maintenance3
- "code": |-
    maintenance4 = Maintenance(id=4, car_id=4, employee_id=4, last_serviced_date=date(2022, 8, 14), service_details="Battery Replacement")
  "test_data_row_variable": |-
    maintenance4
- "code": |-
    car_feature1 = CarFeature(id=1, feature_name="Sunroof")
  "test_data_row_variable": |-
    car_feature1
- "code": |-
    car_feature2 = CarFeature(id=2, feature_name="Leather Seats")
  "test_data_row_variable": |-
    car_feature2
- "code": |-
    car_feature3 = CarFeature(id=3, feature_name="Bluetooth")
  "test_data_row_variable": |-
    car_feature3
- "code": |-
    car_feature4 = CarFeature(id=4, feature_name="Backup Camera")
  "test_data_row_variable": |-
    car_feature4
- "code": |-
    car_feature_assignment1 = CarFeatureAssignment(id=1, car_id=1, feature_id=1)
  "test_data_row_variable": |-
    car_feature_assignment1
- "code": |-
    car_feature_assignment2 = CarFeatureAssignment(id=2, car_id=2, feature_id=2)
  "test_data_row_variable": |-
    car_feature_assignment2
- "code": |-
    car_feature_assignment3 = CarFeatureAssignment(id=3, car_id=3, feature_id=3)
  "test_data_row_variable": |-
    car_feature_assignment3
- "code": |-
    car_feature_assignment4 = CarFeatureAssignment(id=4, car_id=4, feature_id=4)
  "test_data_row_variable": |-
    car_feature_assignment4
"test_data_sqlite": |-
  INSERT INTO car (id, model, brand_id, price, year_of_manufacture, test_drive_count) VALUES (1, "Model S", 1, 80000, 2021, 1);
  INSERT INTO car (id, model, brand_id, price, year_of_manufacture, test_drive_count) VALUES (2, "Model 3", 1, 40000, 2020, 1);
  INSERT INTO car (id, model, brand_id, price, year_of_manufacture, test_drive_count) VALUES (3, "Mustang", 2, 55000, 2022, 1);
  INSERT INTO car (id, model, brand_id, price, year_of_manufacture, test_drive_count) VALUES (4, "Civic", 3, 25000, 2019, 1);

  INSERT INTO brand (id, name) VALUES (1, "Tesla");
  INSERT INTO brand (id, name) VALUES (2, "Ford");
  INSERT INTO brand (id, name) VALUES (3, "Honda");
  INSERT INTO brand (id, name) VALUES (4, "Toyota");

  INSERT INTO customer (id, first_name, last_name, email, test_drive_count) VALUES (1, "Alice", "Smith", "alice@example.com", 1);
  INSERT INTO customer (id, first_name, last_name, email, test_drive_count) VALUES (2, "Bob", "Johnson", "bob@example.com", 1);
  INSERT INTO customer (id, first_name, last_name, email, test_drive_count) VALUES (3, "Charlie", "Brown", "charlie@example.com", 1);
  INSERT INTO customer (id, first_name, last_name, email, test_drive_count) VALUES (4, "Diana", "Evans", "diana@example.com", 1);

  INSERT INTO sale (id, car_id, customer_id, sale_date, sale_price) VALUES (1, 1, 1, date(2022, 5, 20), 80000);
  INSERT INTO sale (id, car_id, customer_id, sale_date, sale_price) VALUES (2, 2, 2, date(2022, 7, 15), 38000);
  INSERT INTO sale (id, car_id, customer_id, sale_date, sale_price) VALUES (3, 3, 3, date(2022, 8, 30), 55000);
  INSERT INTO sale (id, car_id, customer_id, sale_date, sale_price) VALUES (4, 4, 4, date(2022, 12, 5), 24000);

  INSERT INTO dealer (id, name, location, inventory_count) VALUES (1, "Auto World", "New York", 15);
  INSERT INTO dealer (id, name, location, inventory_count) VALUES (2, "Speed Motors", "Los Angeles", 20);
  INSERT INTO dealer (id, name, location, inventory_count) VALUES (3, "Fast Drive", "Chicago", 17);
  INSERT INTO dealer (id, name, location, inventory_count) VALUES (4, "Luxury Cars", "Houston", 19);

  INSERT INTO inventory (id, dealer_id, car_id, quantity) VALUES (1, 1, 1, 5);
  INSERT INTO inventory (id, dealer_id, car_id, quantity) VALUES (2, 2, 2, 10);
  INSERT INTO inventory (id, dealer_id, car_id, quantity) VALUES (3, 3, 3, 3);
  INSERT INTO inventory (id, dealer_id, car_id, quantity) VALUES (4, 4, 4, 7);

  INSERT INTO employee (id, dealer_id, first_name, last_name, position, service_count) VALUES (1, 1, "Paul", "Davis", "Sales Manager", 3);
  INSERT INTO employee (id, dealer_id, first_name, last_name, position, service_count) VALUES (2, 2, "Laura", "Miller", "Technician", 2);
  INSERT INTO employee (id, dealer_id, first_name, last_name, position, service_count) VALUES (3, 3, "Kevin", "Cook", "Accountant", 4);
  INSERT INTO employee (id, dealer_id, first_name, last_name, position, service_count) VALUES (4, 4, "Sarah", "Johnson", "Receptionist", 1);

  INSERT INTO test_drive (id, customer_id, car_id, date) VALUES (1, 1, 1, date(2022, 4, 10));
  INSERT INTO test_drive (id, customer_id, car_id, date) VALUES (2, 2, 2, date(2022, 6, 12));
  INSERT INTO test_drive (id, customer_id, car_id, date) VALUES (3, 3, 3, date(2022, 7, 18));
  INSERT INTO test_drive (id, customer_id, car_id, date) VALUES (4, 4, 4, date(2022, 9, 25));

  INSERT INTO promotion (id, car_id, description, discount_percentage, applied_count) VALUES (1, 1, "Winter Sale", 10, 1);
  INSERT INTO promotion (id, car_id, description, discount_percentage, applied_count) VALUES (2, 2, "Summer Clearance", 15, 1);
  INSERT INTO promotion (id, car_id, description, discount_percentage, applied_count) VALUES (3, 3, "New Year Offer", 5, 1);
  INSERT INTO promotion (id, car_id, description, discount_percentage, applied_count) VALUES (4, 4, "Anniversary Special", 20, 1);

  INSERT INTO maintenance (id, car_id, employee_id, last_serviced_date, service_details) VALUES (1, 1, 1, date(2022, 3, 10), "Oil Change");
  INSERT INTO maintenance (id, car_id, employee_id, last_serviced_date, service_details) VALUES (2, 2, date(2022, 5, 5), "Brake Check");
  INSERT INTO maintenance (id, car_id, employee_id, last_serviced_date, service_details) VALUES (3, 3, date(2022, 6, 22), "Tire Rotation");
  INSERT INTO maintenance (id, car_id, employee_id, last_serviced_date, service_details) VALUES (4, 4, date(2022, 8, 14), "Battery Replacement");

  INSERT INTO car_feature (id, feature_name) VALUES (1, "Sunroof");
  INSERT INTO car_feature (id, feature_name) VALUES (2, "Leather Seats");
  INSERT INTO car_feature (id, feature_name) VALUES (3, "Bluetooth");
  INSERT INTO car_feature (id, feature_name) VALUES (4, "Backup Camera");

  INSERT INTO car_feature_assignment (id, car_id, feature_id) VALUES (1, 1, 1);
  INSERT INTO car_feature_assignment (id, car_id, feature_id) VALUES (2, 2, 2);
  INSERT INTO car_feature_assignment (id, car_id, feature_id) VALUES (3, 3, 3);
  INSERT INTO car_feature_assignment (id, car_id, feature_id) VALUES (4, 4, 4);
